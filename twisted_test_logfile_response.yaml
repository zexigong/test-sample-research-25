response: "```python\n# Copyright (c) Twisted Matrix Laboratories.\n# See LICENSE\
  \ for details.\n\nimport os\nimport glob\nimport time\nimport unittest\n\nfrom twisted.python.test.test_threadable\
  \ import DummyLock\nfrom twisted.python import threadable\nfrom twisted.python import\
  \ logfile\n\n\nclass LogFileTest(unittest.TestCase):\n    def setUp(self):\n   \
  \     self.directory = self.mktemp()\n        os.mkdir(self.directory)\n\n    def\
  \ test_logFile(self):\n        n = logfile.LogFile(\"test.log\", self.directory,\
  \ rotateLength=100)\n        self.assertEqual(n.__class__, logfile.LogFile)\n  \
  \      self.assertEqual(n.path, os.path.join(self.directory, \"test.log\"))\n  \
  \      self.assertEqual(n.size, 0)\n        self.assertEqual(n.rotateLength, 100)\n\
  \        self.assertEqual(n.closed, False)\n        self.assertEqual(n.listLogs(),\
  \ [])\n        self.assertEqual(n.maxRotatedFiles, None)\n\n    def test_logFileFromFullPath(self):\n\
  \        path = os.path.join(self.directory, \"test.log\")\n        n = logfile.LogFile.fromFullPath(path,\
  \ rotateLength=100)\n        self.assertEqual(n.__class__, logfile.LogFile)\n  \
  \      self.assertEqual(n.path, path)\n        self.assertEqual(n.size, 0)\n   \
  \     self.assertEqual(n.rotateLength, 100)\n        self.assertEqual(n.closed,\
  \ False)\n        self.assertEqual(n.listLogs(), [])\n        self.assertEqual(n.maxRotatedFiles,\
  \ None)\n\n    def test_rotateLengthNone(self):\n        n = logfile.LogFile(\"\
  test.log\", self.directory, rotateLength=None)\n        self.assertEqual(n.__class__,\
  \ logfile.LogFile)\n        self.assertEqual(n.path, os.path.join(self.directory,\
  \ \"test.log\"))\n        self.assertEqual(n.size, 0)\n        self.assertEqual(n.rotateLength,\
  \ None)\n        self.assertEqual(n.closed, False)\n        self.assertEqual(n.listLogs(),\
  \ [])\n        self.assertEqual(n.maxRotatedFiles, None)\n\n    def test_logFileWithMaxRotatedFiles(self):\n\
  \        n = logfile.LogFile(\n            \"test.log\", self.directory, rotateLength=100,\
  \ maxRotatedFiles=5\n        )\n        self.assertEqual(n.__class__, logfile.LogFile)\n\
  \        self.assertEqual(n.path, os.path.join(self.directory, \"test.log\"))\n\
  \        self.assertEqual(n.size, 0)\n        self.assertEqual(n.rotateLength, 100)\n\
  \        self.assertEqual(n.closed, False)\n        self.assertEqual(n.listLogs(),\
  \ [])\n        self.assertEqual(n.maxRotatedFiles, 5)\n\n    def test_logFileWithDefaultMode(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, defaultMode=0o600)\n\
  \        self.assertEqual(n.__class__, logfile.LogFile)\n        self.assertEqual(n.path,\
  \ os.path.join(self.directory, \"test.log\"))\n        self.assertEqual(n.size,\
  \ 0)\n        self.assertEqual(n.rotateLength, 1000000)\n        self.assertEqual(n.closed,\
  \ False)\n        self.assertEqual(n.listLogs(), [])\n        self.assertEqual(n.maxRotatedFiles,\
  \ None)\n\n    def test_write(self):\n        n = logfile.LogFile(\"test.log\",\
  \ self.directory, rotateLength=100)\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n\n    def\
  \ test_writeBytes(self):\n        n = logfile.LogFile(\"test.log\", self.directory,\
  \ rotateLength=100)\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n\n    def\
  \ test_writeWithManualRotation(self):\n        n = logfile.LogFile(\"test.log\"\
  , self.directory, rotateLength=10)\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1])\n       \
  \ n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs =\
  \ n.listLogs()\n        self.assertEqual(logs, [1, 2])\n\n    def test_writeWithDefaultMode(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, defaultMode=0o600)\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 10)\n\n    def test_writeWithMaxRotatedFiles(self):\n\
  \        n = logfile.LogFile(\n            \"test.log\", self.directory, rotateLength=10,\
  \ maxRotatedFiles=5\n        )\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1])\n       \
  \ n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs =\
  \ n.listLogs()\n        self.assertEqual(logs, [1, 2])\n        n.write(\"Hello\"\
  )\n        self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1, 2, 3])\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2, 3, 4])\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs =\
  \ n.listLogs()\n        self.assertEqual(logs, [1, 2, 3, 4, 5])\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [2, 3, 4, 5, 6])\n        n.write(\"Hello\")\n    \
  \    self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(\"Hello\"\
  )\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [3, 4, 5, 6, 7])\n\n    def test_writeBinary(self):\n        n = logfile.LogFile(\"\
  test.log\", self.directory, rotateLength=100)\n        n.write(b\"Hello\")\n   \
  \     self.assertEqual(n.size, 5)\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n\n    def test_writeBinaryWithManualRotation(self):\n        n = logfile.LogFile(\"\
  test.log\", self.directory, rotateLength=10)\n        n.write(b\"Hello\")\n    \
  \    self.assertEqual(n.size, 5)\n        n.rotate()\n        n.write(b\"Hello\"\
  )\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n        n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n    \
  \    n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size, 5)\n\
  \        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n\n    def\
  \ test_writeBinaryWithDefaultMode(self):\n        n = logfile.LogFile(\"test.log\"\
  , self.directory, defaultMode=0o600)\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n\n    def\
  \ test_writeBinaryWithMaxRotatedFiles(self):\n        n = logfile.LogFile(\n   \
  \         \"test.log\", self.directory, rotateLength=10, maxRotatedFiles=5\n   \
  \     )\n        n.write(b\"Hello\")\n        self.assertEqual(n.size, 5)\n    \
  \    n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size, 5)\n\
  \        logs = n.listLogs()\n        self.assertEqual(logs, [1])\n        n.write(b\"\
  Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(b\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1, 2])\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n        n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2, 3])\n \
  \       n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(b\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs\
  \ = n.listLogs()\n        self.assertEqual(logs, [1, 2, 3, 4])\n        n.write(b\"\
  Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(b\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1, 2, 3, 4, 5])\n        n.write(b\"Hello\")\n   \
  \     self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(b\"Hello\"\
  )\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [2, 3, 4, 5, 6])\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n        n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [3, 4, 5, 6, 7])\n\
  \n    def test_notWritableDirectory(self):\n        # Create a file, and make it\
  \ read-only, so that we cannot\n        # create a file in this directory.\n   \
  \     n = logfile.LogFile(\"test.log\", self.directory, rotateLength=100)\n\n  \
  \      os.chmod(self.directory, 0o400)\n\n        # On Windows, we can't remove\
  \ write permissions from a\n        # directory, so skip this test on Windows.\n\
  \        if os.access(self.directory, os.W_OK):\n            self.skipTest(\"cannot\
  \ remove write permissions\")\n\n        n.write(\"Hello\")\n\n    def test_notWritableFile(self):\n\
  \        # Create a file, and make it read-only, so that we cannot\n        # write\
  \ to it.\n        n = logfile.LogFile(\"test.log\", self.directory, rotateLength=100)\n\
  \        n.write(\"Hello\")\n        os.chmod(n.path, 0o400)\n\n        # On Windows,\
  \ we can't remove write permissions from a\n        # file, so skip this test on\
  \ Windows.\n        if os.access(n.path, os.W_OK):\n            self.skipTest(\"\
  cannot remove write permissions\")\n\n        n.write(\"Hello\")\n\n    def test_rotateLength(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, rotateLength=10)\n  \
  \      n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 10)\n        n.write(\"Hello\")\n   \
  \     self.assertEqual(n.size, 5)\n\n    def test_rotateLengthNone(self):\n    \
  \    n = logfile.LogFile(\"test.log\", self.directory, rotateLength=None)\n    \
  \    n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 10)\n        n.write(\"Hello\")\n   \
  \     self.assertEqual(n.size, 15)\n\n    def test_reopen(self):\n        n = logfile.LogFile(\"\
  test.log\", self.directory, rotateLength=10)\n        n.write(\"Hello\")\n     \
  \   self.assertEqual(n.size, 5)\n        n.reopen()\n        n.write(\"Hello\")\n\
  \        self.assertEqual(n.size, 10)\n\n    def test_reopenWithDefaultMode(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, defaultMode=0o600)\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        n.reopen()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n\n    def test_reopenWithMaxRotatedFiles(self):\n\
  \        n = logfile.LogFile(\n            \"test.log\", self.directory, rotateLength=10,\
  \ maxRotatedFiles=5\n        )\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        n.reopen()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n\n    def test_reopenBinary(self):\n        n = logfile.LogFile(\"test.log\"\
  , self.directory, rotateLength=10)\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        n.reopen()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n\n    def test_reopenBinaryWithDefaultMode(self):\n        n = logfile.LogFile(\"\
  test.log\", self.directory, defaultMode=0o600)\n        n.write(b\"Hello\")\n  \
  \      self.assertEqual(n.size, 5)\n        n.reopen()\n        n.write(b\"Hello\"\
  )\n        self.assertEqual(n.size, 10)\n\n    def test_reopenBinaryWithMaxRotatedFiles(self):\n\
  \        n = logfile.LogFile(\n            \"test.log\", self.directory, rotateLength=10,\
  \ maxRotatedFiles=5\n        )\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        n.reopen()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n\n    def test_rotate(self):\n        n = logfile.LogFile(\"test.log\", self.directory,\
  \ rotateLength=10)\n        n.write(\"Hello\")\n        n.rotate()\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1])\n\n    def test_rotateWithDefaultMode(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, defaultMode=0o600)\n\
  \        n.write(\"Hello\")\n        n.rotate()\n        n.write(\"Hello\")\n  \
  \      self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n\n    def test_rotateWithMaxRotatedFiles(self):\n        n = logfile.LogFile(\n\
  \            \"test.log\", self.directory, rotateLength=10, maxRotatedFiles=5\n\
  \        )\n        n.write(\"Hello\")\n        n.rotate()\n        n.write(\"Hello\"\
  )\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n\n    def test_rotateBinary(self):\n        n = logfile.LogFile(\"test.log\"\
  , self.directory, rotateLength=10)\n        n.write(b\"Hello\")\n        n.rotate()\n\
  \        n.write(b\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs\
  \ = n.listLogs()\n        self.assertEqual(logs, [1])\n\n    def test_rotateBinaryWithDefaultMode(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, defaultMode=0o600)\n\
  \        n.write(b\"Hello\")\n        n.rotate()\n        n.write(b\"Hello\")\n\
  \        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n\n    def test_rotateBinaryWithMaxRotatedFiles(self):\n        n = logfile.LogFile(\n\
  \            \"test.log\", self.directory, rotateLength=10, maxRotatedFiles=5\n\
  \        )\n        n.write(b\"Hello\")\n        n.rotate()\n        n.write(b\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1])\n\n    def test_rotateAndReopen(self):\n     \
  \   n = logfile.LogFile(\"test.log\", self.directory, rotateLength=10)\n       \
  \ n.write(\"Hello\")\n        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1])\n       \
  \ n.reopen()\n        n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n\
  \n    def test_rotateAndReopenWithDefaultMode(self):\n        n = logfile.LogFile(\"\
  test.log\", self.directory, defaultMode=0o600)\n        n.write(\"Hello\")\n   \
  \     n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n\
  \        logs = n.listLogs()\n        self.assertEqual(logs, [1])\n        n.reopen()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n\n    def test_rotateAndReopenWithMaxRotatedFiles(self):\n\
  \        n = logfile.LogFile(\n            \"test.log\", self.directory, rotateLength=10,\
  \ maxRotatedFiles=5\n        )\n        n.write(\"Hello\")\n        n.rotate()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs =\
  \ n.listLogs()\n        self.assertEqual(logs, [1])\n        n.reopen()\n      \
  \  n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n\n    def test_rotateAndReopenBinary(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, rotateLength=10)\n  \
  \      n.write(b\"Hello\")\n        n.rotate()\n        n.write(b\"Hello\")\n  \
  \      self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n        n.reopen()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n\n    def test_rotateAndReopenBinaryWithDefaultMode(self):\n        n = logfile.LogFile(\"\
  test.log\", self.directory, defaultMode=0o600)\n        n.write(b\"Hello\")\n  \
  \      n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1])\n       \
  \ n.reopen()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n\
  \n    def test_rotateAndReopenBinaryWithMaxRotatedFiles(self):\n        n = logfile.LogFile(\n\
  \            \"test.log\", self.directory, rotateLength=10, maxRotatedFiles=5\n\
  \        )\n        n.write(b\"Hello\")\n        n.rotate()\n        n.write(b\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1])\n        n.reopen()\n        n.write(b\"Hello\"\
  )\n        self.assertEqual(n.size, 10)\n\n    def test_rotateAndReopenAfterWrite(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, rotateLength=10)\n  \
  \      n.write(\"Hello\")\n        n.reopen()\n        n.write(\"Hello\")\n    \
  \    self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(\"Hello\"\
  )\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n\n    def test_rotateAndReopenAfterWriteWithDefaultMode(self):\n       \
  \ n = logfile.LogFile(\"test.log\", self.directory, defaultMode=0o600)\n       \
  \ n.write(\"Hello\")\n        n.reopen()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1])\n\n    def\
  \ test_rotateAndReopenAfterWriteWithMaxRotatedFiles(self):\n        n = logfile.LogFile(\n\
  \            \"test.log\", self.directory, rotateLength=10, maxRotatedFiles=5\n\
  \        )\n        n.write(\"Hello\")\n        n.reopen()\n        n.write(\"Hello\"\
  )\n        self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1])\n\n    def test_rotateAndReopenAfterWriteBinary(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, rotateLength=10)\n  \
  \      n.write(b\"Hello\")\n        n.reopen()\n        n.write(b\"Hello\")\n  \
  \      self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(b\"Hello\"\
  )\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n\n    def test_rotateAndReopenAfterWriteBinaryWithDefaultMode(self):\n \
  \       n = logfile.LogFile(\"test.log\", self.directory, defaultMode=0o600)\n \
  \       n.write(b\"Hello\")\n        n.reopen()\n        n.write(b\"Hello\")\n \
  \       self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(b\"Hello\"\
  )\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n\n    def test_rotateAndReopenAfterWriteBinaryWithMaxRotatedFiles(self):\n\
  \        n = logfile.LogFile(\n            \"test.log\", self.directory, rotateLength=10,\
  \ maxRotatedFiles=5\n        )\n        n.write(b\"Hello\")\n        n.reopen()\n\
  \        n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(b\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs\
  \ = n.listLogs()\n        self.assertEqual(logs, [1])\n\n    def test_listLogs(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, rotateLength=10)\n  \
  \      n.write(\"Hello\")\n        n.rotate()\n        n.write(\"Hello\")\n    \
  \    n.rotate()\n        n.write(\"Hello\")\n        n.rotate()\n        logs =\
  \ n.listLogs()\n        self.assertEqual(logs, [1, 2, 3])\n\n    def test_listLogsWithDefaultMode(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, defaultMode=0o600)\n\
  \        n.write(\"Hello\")\n        n.rotate()\n        n.write(\"Hello\")\n  \
  \      n.rotate()\n        n.write(\"Hello\")\n        n.rotate()\n        logs\
  \ = n.listLogs()\n        self.assertEqual(logs, [1, 2, 3])\n\n    def test_listLogsWithMaxRotatedFiles(self):\n\
  \        n = logfile.LogFile(\n            \"test.log\", self.directory, rotateLength=10,\
  \ maxRotatedFiles=5\n        )\n        n.write(\"Hello\")\n        n.rotate()\n\
  \        n.write(\"Hello\")\n        n.rotate()\n        n.write(\"Hello\")\n  \
  \      n.rotate()\n        logs = n.listLogs()\n        self.assertEqual(logs, [1,\
  \ 2, 3])\n\n    def test_listLogsBinary(self):\n        n = logfile.LogFile(\"test.log\"\
  , self.directory, rotateLength=10)\n        n.write(b\"Hello\")\n        n.rotate()\n\
  \        n.write(b\"Hello\")\n        n.rotate()\n        n.write(b\"Hello\")\n\
  \        n.rotate()\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1, 2, 3])\n\n    def test_listLogsBinaryWithDefaultMode(self):\n        n = logfile.LogFile(\"\
  test.log\", self.directory, defaultMode=0o600)\n        n.write(b\"Hello\")\n  \
  \      n.rotate()\n        n.write(b\"Hello\")\n        n.rotate()\n        n.write(b\"\
  Hello\")\n        n.rotate()\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1, 2, 3])\n\n    def test_listLogsBinaryWithMaxRotatedFiles(self):\n        n\
  \ = logfile.LogFile(\n            \"test.log\", self.directory, rotateLength=10,\
  \ maxRotatedFiles=5\n        )\n        n.write(b\"Hello\")\n        n.rotate()\n\
  \        n.write(b\"Hello\")\n        n.rotate()\n        n.write(b\"Hello\")\n\
  \        n.rotate()\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1, 2, 3])\n\n    def test_rotateAndReopenAndRotate(self):\n        n = logfile.LogFile(\"\
  test.log\", self.directory, rotateLength=10)\n        n.write(\"Hello\")\n     \
  \   n.reopen()\n        n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n\
  \        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1])\n       \
  \ n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n\
  \        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n\n    def\
  \ test_rotateAndReopenAndRotateWithDefaultMode(self):\n        n = logfile.LogFile(\"\
  test.log\", self.directory, defaultMode=0o600)\n        n.write(\"Hello\")\n   \
  \     n.reopen()\n        n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n\
  \        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1])\n       \
  \ n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n\
  \        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n\n    def\
  \ test_rotateAndReopenAndRotateWithMaxRotatedFiles(self):\n        n = logfile.LogFile(\n\
  \            \"test.log\", self.directory, rotateLength=10, maxRotatedFiles=5\n\
  \        )\n        n.write(\"Hello\")\n        n.reopen()\n        n.write(\"Hello\"\
  )\n        self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1])\n        n.rotate()\n        n.write(\"Hello\"\
  )\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1, 2])\n\n    def test_rotateAndReopenAndRotateBinary(self):\n        n = logfile.LogFile(\"\
  test.log\", self.directory, rotateLength=10)\n        n.write(b\"Hello\")\n    \
  \    n.reopen()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n\
  \        n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1])\n       \
  \ n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size, 5)\n\
  \        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n\n    def\
  \ test_rotateAndReopenAndRotateBinaryWithDefaultMode(self):\n        n = logfile.LogFile(\"\
  test.log\", self.directory, defaultMode=0o600)\n        n.write(b\"Hello\")\n  \
  \      n.reopen()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n        n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1])\n       \
  \ n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size, 5)\n\
  \        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n\n    def\
  \ test_rotateAndReopenAndRotateBinaryWithMaxRotatedFiles(self):\n        n = logfile.LogFile(\n\
  \            \"test.log\", self.directory, rotateLength=10, maxRotatedFiles=5\n\
  \        )\n        n.write(b\"Hello\")\n        n.reopen()\n        n.write(b\"\
  Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(b\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1])\n        n.rotate()\n        n.write(b\"Hello\"\
  )\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1, 2])\n\n    def test_rotateAndReopenAndRotateAndReopen(self):\n        n =\
  \ logfile.LogFile(\"test.log\", self.directory, rotateLength=10)\n        n.write(\"\
  Hello\")\n        n.reopen()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1])\n       \
  \ n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n\
  \        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n        n.reopen()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n\n    def test_rotateAndReopenAndRotateAndReopenWithDefaultMode(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, defaultMode=0o600)\n\
  \        n.write(\"Hello\")\n        n.reopen()\n        n.write(\"Hello\")\n  \
  \      self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(\"Hello\"\
  )\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n    \
  \    n.reopen()\n        n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n\
  \n    def test_rotateAndReopenAndRotateAndReopenWithMaxRotatedFiles(self):\n   \
  \     n = logfile.LogFile(\n            \"test.log\", self.directory, rotateLength=10,\
  \ maxRotatedFiles=5\n        )\n        n.write(\"Hello\")\n        n.reopen()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs =\
  \ n.listLogs()\n        self.assertEqual(logs, [1])\n        n.rotate()\n      \
  \  n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n\
  \        self.assertEqual(logs, [1, 2])\n        n.reopen()\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 10)\n\n    def test_rotateAndReopenAndRotateAndReopenBinary(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, rotateLength=10)\n  \
  \      n.write(b\"Hello\")\n        n.reopen()\n        n.write(b\"Hello\")\n  \
  \      self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(b\"Hello\"\
  )\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n        n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n    \
  \    n.reopen()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n\
  \n    def test_rotateAndReopenAndRotateAndReopenBinaryWithDefaultMode(self):\n \
  \       n = logfile.LogFile(\"test.log\", self.directory, defaultMode=0o600)\n \
  \       n.write(b\"Hello\")\n        n.reopen()\n        n.write(b\"Hello\")\n \
  \       self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(b\"Hello\"\
  )\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n        n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n    \
  \    n.reopen()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n\
  \n    def test_rotateAndReopenAndRotateAndReopenBinaryWithMaxRotatedFiles(self):\n\
  \        n = logfile.LogFile(\n            \"test.log\", self.directory, rotateLength=10,\
  \ maxRotatedFiles=5\n        )\n        n.write(b\"Hello\")\n        n.reopen()\n\
  \        n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(b\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs\
  \ = n.listLogs()\n        self.assertEqual(logs, [1])\n        n.rotate()\n    \
  \    n.write(b\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n\
  \        self.assertEqual(logs, [1, 2])\n        n.reopen()\n        n.write(b\"\
  Hello\")\n        self.assertEqual(n.size, 10)\n\n    def test_rotateAndReopenAndRotateAndReopenAndRotate(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, rotateLength=10)\n  \
  \      n.write(\"Hello\")\n        n.reopen()\n        n.write(\"Hello\")\n    \
  \    self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(\"Hello\"\
  )\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n    \
  \    n.reopen()\n        n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n\
  \        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2, 3])\n\n\
  \    def test_rotateAndReopenAndRotateAndReopenAndRotateWithDefaultMode(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, defaultMode=0o600)\n\
  \        n.write(\"Hello\")\n        n.reopen()\n        n.write(\"Hello\")\n  \
  \      self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(\"Hello\"\
  )\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n    \
  \    n.reopen()\n        n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n\
  \        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2, 3])\n\n\
  \    def test_rotateAndReopenAndRotateAndReopenAndRotateWithMaxRotatedFiles(self):\n\
  \        n = logfile.LogFile(\n            \"test.log\", self.directory, rotateLength=10,\
  \ maxRotatedFiles=5\n        )\n        n.write(\"Hello\")\n        n.reopen()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs =\
  \ n.listLogs()\n        self.assertEqual(logs, [1])\n        n.rotate()\n      \
  \  n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n\
  \        self.assertEqual(logs, [1, 2])\n        n.reopen()\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1, 2, 3])\n\n    def test_rotateAndReopenAndRotateAndReopenAndRotateBinary(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, rotateLength=10)\n  \
  \      n.write(b\"Hello\")\n        n.reopen()\n        n.write(b\"Hello\")\n  \
  \      self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(b\"Hello\"\
  )\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n        n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n    \
  \    n.reopen()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n\
  \        n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2, 3])\n\n\
  \    def test_rotateAndReopenAndRotateAndReopenAndRotateBinaryWithDefaultMode(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, defaultMode=0o600)\n\
  \        n.write(b\"Hello\")\n        n.reopen()\n        n.write(b\"Hello\")\n\
  \        self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(b\"Hello\"\
  )\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n        n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n    \
  \    n.reopen()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n\
  \        n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2, 3])\n\n\
  \    def test_rotateAndReopenAndRotateAndReopenAndRotateBinaryWithMaxRotatedFiles(self):\n\
  \        n = logfile.LogFile(\n            \"test.log\", self.directory, rotateLength=10,\
  \ maxRotatedFiles=5\n        )\n        n.write(b\"Hello\")\n        n.reopen()\n\
  \        n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(b\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs\
  \ = n.listLogs()\n        self.assertEqual(logs, [1])\n        n.rotate()\n    \
  \    n.write(b\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n\
  \        self.assertEqual(logs, [1, 2])\n        n.reopen()\n        n.write(b\"\
  Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(b\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1, 2, 3])\n\n    def test_logFileGetLog(self):\n \
  \       n = logfile.LogFile(\"test.log\", self.directory, rotateLength=10)\n   \
  \     n.write(\"Hello\")\n        n.rotate()\n        n.write(\"Hello\")\n     \
  \   self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n        log1 = n.getLog(1)\n        log1.close()\n\n    def test_logFileGetLogWithDefaultMode(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, defaultMode=0o600)\n\
  \        n.write(\"Hello\")\n        n.rotate()\n        n.write(\"Hello\")\n  \
  \      self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n        log1 = n.getLog(1)\n        log1.close()\n\n    def test_logFileGetLogWithMaxRotatedFiles(self):\n\
  \        n = logfile.LogFile(\n            \"test.log\", self.directory, rotateLength=10,\
  \ maxRotatedFiles=5\n        )\n        n.write(\"Hello\")\n        n.rotate()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs =\
  \ n.listLogs()\n        self.assertEqual(logs, [1])\n        log1 = n.getLog(1)\n\
  \        log1.close()\n\n    def test_logFileGetLogBinary(self):\n        n = logfile.LogFile(\"\
  test.log\", self.directory, rotateLength=10)\n        n.write(b\"Hello\")\n    \
  \    n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size, 5)\n\
  \        logs = n.listLogs()\n        self.assertEqual(logs, [1])\n        log1\
  \ = n.getLog(1)\n        log1.close()\n\n    def test_logFileGetLogBinaryWithDefaultMode(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, defaultMode=0o600)\n\
  \        n.write(b\"Hello\")\n        n.rotate()\n        n.write(b\"Hello\")\n\
  \        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n        log1 = n.getLog(1)\n        log1.close()\n\n    def test_logFileGetLogBinaryWithMaxRotatedFiles(self):\n\
  \        n = logfile.LogFile(\n            \"test.log\", self.directory, rotateLength=10,\
  \ maxRotatedFiles=5\n        )\n        n.write(b\"Hello\")\n        n.rotate()\n\
  \        n.write(b\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs\
  \ = n.listLogs()\n        self.assertEqual(logs, [1])\n        log1 = n.getLog(1)\n\
  \        log1.close()\n\n    def test_logFileGetLogAndReopen(self):\n        n =\
  \ logfile.LogFile(\"test.log\", self.directory, rotateLength=10)\n        n.write(\"\
  Hello\")\n        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1])\n       \
  \ log1 = n.getLog(1)\n        log1.close()\n        n.reopen()\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 10)\n\n    def test_logFileGetLogAndReopenWithDefaultMode(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, defaultMode=0o600)\n\
  \        n.write(\"Hello\")\n        n.rotate()\n        n.write(\"Hello\")\n  \
  \      self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n        log1 = n.getLog(1)\n        log1.close()\n        n.reopen()\n \
  \       n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n\n    def test_logFileGetLogAndReopenWithMaxRotatedFiles(self):\n\
  \        n = logfile.LogFile(\n            \"test.log\", self.directory, rotateLength=10,\
  \ maxRotatedFiles=5\n        )\n        n.write(\"Hello\")\n        n.rotate()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs =\
  \ n.listLogs()\n        self.assertEqual(logs, [1])\n        log1 = n.getLog(1)\n\
  \        log1.close()\n        n.reopen()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n\n    def test_logFileGetLogAndReopenBinary(self):\n        n = logfile.LogFile(\"\
  test.log\", self.directory, rotateLength=10)\n        n.write(b\"Hello\")\n    \
  \    n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size, 5)\n\
  \        logs = n.listLogs()\n        self.assertEqual(logs, [1])\n        log1\
  \ = n.getLog(1)\n        log1.close()\n        n.reopen()\n        n.write(b\"Hello\"\
  )\n        self.assertEqual(n.size, 10)\n\n    def test_logFileGetLogAndReopenBinaryWithDefaultMode(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, defaultMode=0o600)\n\
  \        n.write(b\"Hello\")\n        n.rotate()\n        n.write(b\"Hello\")\n\
  \        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n        log1 = n.getLog(1)\n        log1.close()\n        n.reopen()\n \
  \       n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n\n    def test_logFileGetLogAndReopenBinaryWithMaxRotatedFiles(self):\n\
  \        n = logfile.LogFile(\n            \"test.log\", self.directory, rotateLength=10,\
  \ maxRotatedFiles=5\n        )\n        n.write(b\"Hello\")\n        n.rotate()\n\
  \        n.write(b\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs\
  \ = n.listLogs()\n        self.assertEqual(logs, [1])\n        log1 = n.getLog(1)\n\
  \        log1.close()\n        n.reopen()\n        n.write(b\"Hello\")\n       \
  \ self.assertEqual(n.size, 10)\n\n    def test_logFileGetLogAndReopenAndRotate(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, rotateLength=10)\n  \
  \      n.write(\"Hello\")\n        n.rotate()\n        n.write(\"Hello\")\n    \
  \    self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n        log1 = n.getLog(1)\n        log1.close()\n        n.reopen()\n \
  \       n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs =\
  \ n.listLogs()\n        self.assertEqual(logs, [1, 2])\n\n    def test_logFileGetLogAndReopenAndRotateWithDefaultMode(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, defaultMode=0o600)\n\
  \        n.write(\"Hello\")\n        n.rotate()\n        n.write(\"Hello\")\n  \
  \      self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n        log1 = n.getLog(1)\n        log1.close()\n        n.reopen()\n \
  \       n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs =\
  \ n.listLogs()\n        self.assertEqual(logs, [1, 2])\n\n    def test_logFileGetLogAndReopenAndRotateWithMaxRotatedFiles(self):\n\
  \        n = logfile.LogFile(\n            \"test.log\", self.directory, rotateLength=10,\
  \ maxRotatedFiles=5\n        )\n        n.write(\"Hello\")\n        n.rotate()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs =\
  \ n.listLogs()\n        self.assertEqual(logs, [1])\n        log1 = n.getLog(1)\n\
  \        log1.close()\n        n.reopen()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n\n  \
  \  def test_logFileGetLogAndReopenAndRotateBinary(self):\n        n = logfile.LogFile(\"\
  test.log\", self.directory, rotateLength=10)\n        n.write(b\"Hello\")\n    \
  \    n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size, 5)\n\
  \        logs = n.listLogs()\n        self.assertEqual(logs, [1])\n        log1\
  \ = n.getLog(1)\n        log1.close()\n        n.reopen()\n        n.write(b\"Hello\"\
  )\n        self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(b\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1, 2])\n\n    def test_logFileGetLogAndReopenAndRotateBinaryWithDefaultMode(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, defaultMode=0o600)\n\
  \        n.write(b\"Hello\")\n        n.rotate()\n        n.write(b\"Hello\")\n\
  \        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n        log1 = n.getLog(1)\n        log1.close()\n        n.reopen()\n \
  \       n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(b\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs\
  \ = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n\n    def test_logFileGetLogAndReopenAndRotateBinaryWithMaxRotatedFiles(self):\n\
  \        n = logfile.LogFile(\n            \"test.log\", self.directory, rotateLength=10,\
  \ maxRotatedFiles=5\n        )\n        n.write(b\"Hello\")\n        n.rotate()\n\
  \        n.write(b\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs\
  \ = n.listLogs()\n        self.assertEqual(logs, [1])\n        log1 = n.getLog(1)\n\
  \        log1.close()\n        n.reopen()\n        n.write(b\"Hello\")\n       \
  \ self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(b\"Hello\")\n\
  \        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1, 2])\n\n    def test_logFileGetLogAndReopenAndRotateAndReopen(self):\n    \
  \    n = logfile.LogFile(\"test.log\", self.directory, rotateLength=10)\n      \
  \  n.write(\"Hello\")\n        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1])\n       \
  \ log1 = n.getLog(1)\n        log1.close()\n        n.reopen()\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1, 2])\n        n.reopen()\n        n.write(\"Hello\"\
  )\n        self.assertEqual(n.size, 10)\n\n    def test_logFileGetLogAndReopenAndRotateAndReopenWithDefaultMode(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, defaultMode=0o600)\n\
  \        n.write(\"Hello\")\n        n.rotate()\n        n.write(\"Hello\")\n  \
  \      self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n        log1 = n.getLog(1)\n        log1.close()\n        n.reopen()\n \
  \       n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs =\
  \ n.listLogs()\n        self.assertEqual(logs, [1, 2])\n        n.reopen()\n   \
  \     n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n\n    def test_logFileGetLogAndReopenAndRotateAndReopenWithMaxRotatedFiles(self):\n\
  \        n = logfile.LogFile(\n            \"test.log\", self.directory, rotateLength=10,\
  \ maxRotatedFiles=5\n        )\n        n.write(\"Hello\")\n        n.rotate()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs =\
  \ n.listLogs()\n        self.assertEqual(logs, [1])\n        log1 = n.getLog(1)\n\
  \        log1.close()\n        n.reopen()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n    \
  \    n.reopen()\n        n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n\
  \n    def test_logFileGetLogAndReopenAndRotateAndReopenBinary(self):\n        n\
  \ = logfile.LogFile(\"test.log\", self.directory, rotateLength=10)\n        n.write(b\"\
  Hello\")\n        n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1])\n       \
  \ log1 = n.getLog(1)\n        log1.close()\n        n.reopen()\n        n.write(b\"\
  Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(b\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1, 2])\n        n.reopen()\n        n.write(b\"Hello\"\
  )\n        self.assertEqual(n.size, 10)\n\n    def test_logFileGetLogAndReopenAndRotateAndReopenBinaryWithDefaultMode(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, defaultMode=0o600)\n\
  \        n.write(b\"Hello\")\n        n.rotate()\n        n.write(b\"Hello\")\n\
  \        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n        log1 = n.getLog(1)\n        log1.close()\n        n.reopen()\n \
  \       n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(b\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs\
  \ = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n        n.reopen()\n \
  \       n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n\n    def test_logFileGetLogAndReopenAndRotateAndReopenBinaryWithMaxRotatedFiles(self):\n\
  \        n = logfile.LogFile(\n            \"test.log\", self.directory, rotateLength=10,\
  \ maxRotatedFiles=5\n        )\n        n.write(b\"Hello\")\n        n.rotate()\n\
  \        n.write(b\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs\
  \ = n.listLogs()\n        self.assertEqual(logs, [1])\n        log1 = n.getLog(1)\n\
  \        log1.close()\n        n.reopen()\n        n.write(b\"Hello\")\n       \
  \ self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(b\"Hello\")\n\
  \        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1, 2])\n        n.reopen()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n\n    def test_logFileGetLogAndReopenAndRotateAndReopenAndRotate(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, rotateLength=10)\n  \
  \      n.write(\"Hello\")\n        n.rotate()\n        n.write(\"Hello\")\n    \
  \    self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n        log1 = n.getLog(1)\n        log1.close()\n        n.reopen()\n \
  \       n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs =\
  \ n.listLogs()\n        self.assertEqual(logs, [1, 2])\n        n.reopen()\n   \
  \     n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs =\
  \ n.listLogs()\n        self.assertEqual(logs, [1, 2, 3])\n\n    def test_logFileGetLogAndReopenAndRotateAndReopenAndRotateWithDefaultMode(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, defaultMode=0o600)\n\
  \        n.write(\"Hello\")\n        n.rotate()\n        n.write(\"Hello\")\n  \
  \      self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n        log1 = n.getLog(1)\n        log1.close()\n        n.reopen()\n \
  \       n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs =\
  \ n.listLogs()\n        self.assertEqual(logs, [1, 2])\n        n.reopen()\n   \
  \     n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs =\
  \ n.listLogs()\n        self.assertEqual(logs, [1, 2, 3])\n\n    def test_logFileGetLogAndReopenAndRotateAndReopenAndRotateWithMaxRotatedFiles(self):\n\
  \        n = logfile.LogFile(\n            \"test.log\", self.directory, rotateLength=10,\
  \ maxRotatedFiles=5\n        )\n        n.write(\"Hello\")\n        n.rotate()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs =\
  \ n.listLogs()\n        self.assertEqual(logs, [1])\n        log1 = n.getLog(1)\n\
  \        log1.close()\n        n.reopen()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n    \
  \    n.reopen()\n        n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n\
  \        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2, 3])\n\n\
  \    def test_logFileGetLogAndReopenAndRotateAndReopenAndRotateBinary(self):\n \
  \       n = logfile.LogFile(\"test.log\", self.directory, rotateLength=10)\n   \
  \     n.write(b\"Hello\")\n        n.rotate()\n        n.write(b\"Hello\")\n   \
  \     self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n        log1 = n.getLog(1)\n        log1.close()\n        n.reopen()\n \
  \       n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(b\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs\
  \ = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n        n.reopen()\n \
  \       n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(b\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs\
  \ = n.listLogs()\n        self.assertEqual(logs, [1, 2, 3])\n\n    def test_logFileGetLogAndReopenAndRotateAndReopenAndRotateBinaryWithDefaultMode(\n\
  \        self,\n    ):\n        n = logfile.LogFile(\"test.log\", self.directory,\
  \ defaultMode=0o600)\n        n.write(b\"Hello\")\n        n.rotate()\n        n.write(b\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1])\n        log1 = n.getLog(1)\n        log1.close()\n\
  \        n.reopen()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n        n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n    \
  \    n.reopen()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n\
  \        n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2, 3])\n\n\
  \    def test_logFileGetLogAndReopenAndRotateAndReopenAndRotateBinaryWithMaxRotatedFiles(\n\
  \        self,\n    ):\n        n = logfile.LogFile(\n            \"test.log\",\
  \ self.directory, rotateLength=10, maxRotatedFiles=5\n        )\n        n.write(b\"\
  Hello\")\n        n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1])\n       \
  \ log1 = n.getLog(1)\n        log1.close()\n        n.reopen()\n        n.write(b\"\
  Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(b\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1, 2])\n        n.reopen()\n        n.write(b\"Hello\"\
  )\n        self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(b\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1, 2, 3])\n\n    def test_logFileGetLogAndReopenAndRotateAndReopenAndRotateAndReopen(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, rotateLength=10)\n  \
  \      n.write(\"Hello\")\n        n.rotate()\n        n.write(\"Hello\")\n    \
  \    self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n        log1 = n.getLog(1)\n        log1.close()\n        n.reopen()\n \
  \       n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs =\
  \ n.listLogs()\n        self.assertEqual(logs, [1, 2])\n        n.reopen()\n   \
  \     n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs =\
  \ n.listLogs()\n        self.assertEqual(logs, [1, 2, 3])\n        n.reopen()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n\n    def test_logFileGetLogAndReopenAndRotateAndReopenAndRotateAndReopenWithDefaultMode(\n\
  \        self,\n    ):\n        n = logfile.LogFile(\"test.log\", self.directory,\
  \ defaultMode=0o600)\n        n.write(\"Hello\")\n        n.rotate()\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1])\n        log1 = n.getLog(1)\n        log1.close()\n\
  \        n.reopen()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n    \
  \    n.reopen()\n        n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n\
  \        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2, 3])\n \
  \       n.reopen()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n\n    def test_logFileGetLogAndReopenAndRotateAndReopenAndRotateAndReopenWithMaxRotatedFiles(\n\
  \        self,\n    ):\n        n = logfile.LogFile(\n            \"test.log\",\
  \ self.directory, rotateLength=10, maxRotatedFiles=5\n        )\n        n.write(\"\
  Hello\")\n        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1])\n       \
  \ log1 = n.getLog(1)\n        log1.close()\n        n.reopen()\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1, 2])\n        n.reopen()\n        n.write(\"Hello\"\
  )\n        self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1, 2, 3])\n        n.reopen()\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 10)\n\n    def test_logFileGetLogAndReopenAndRotateAndReopenAndRotateAndReopenBinary(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, rotateLength=10)\n  \
  \      n.write(b\"Hello\")\n        n.rotate()\n        n.write(b\"Hello\")\n  \
  \      self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n        log1 = n.getLog(1)\n        log1.close()\n        n.reopen()\n \
  \       n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(b\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs\
  \ = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n        n.reopen()\n \
  \       n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(b\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs\
  \ = n.listLogs()\n        self.assertEqual(logs, [1, 2, 3])\n        n.reopen()\n\
  \        n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n\n    def test_logFileGetLogAndReopenAndRotateAndReopenAndRotateAndReopenBinaryWithDefaultMode(\n\
  \        self,\n    ):\n        n = logfile.LogFile(\"test.log\", self.directory,\
  \ defaultMode=0o600)\n        n.write(b\"Hello\")\n        n.rotate()\n        n.write(b\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1])\n        log1 = n.getLog(1)\n        log1.close()\n\
  \        n.reopen()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n        n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n    \
  \    n.reopen()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n\
  \        n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2, 3])\n \
  \       n.reopen()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n\n    def test_logFileGetLogAndReopenAndRotateAndReopenAndRotateAndReopenBinaryWithMaxRotatedFiles(\n\
  \        self,\n    ):\n        n = logfile.LogFile(\n            \"test.log\",\
  \ self.directory, rotateLength=10, maxRotatedFiles=5\n        )\n        n.write(b\"\
  Hello\")\n        n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1])\n       \
  \ log1 = n.getLog(1)\n        log1.close()\n        n.reopen()\n        n.write(b\"\
  Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(b\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1, 2])\n        n.reopen()\n        n.write(b\"Hello\"\
  )\n        self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(b\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1, 2, 3])\n        n.reopen()\n        n.write(b\"\
  Hello\")\n        self.assertEqual(n.size, 10)\n\n    def test_logFileGetLogAndReopenAndRotateAndReopenAndRotateAndReopenAndRotate(self):\n\
  \        n = logfile.LogFile(\"test.log\", self.directory, rotateLength=10)\n  \
  \      n.write(\"Hello\")\n        n.rotate()\n        n.write(\"Hello\")\n    \
  \    self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,\
  \ [1])\n        log1 = n.getLog(1)\n        log1.close()\n        n.reopen()\n \
  \       n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs =\
  \ n.listLogs()\n        self.assertEqual(logs, [1, 2])\n        n.reopen()\n   \
  \     n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs =\
  \ n.listLogs()\n        self.assertEqual(logs, [1, 2, 3])\n        n.reopen()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n\
  \        n.write(\"Hello\")\n        self.assertEqual(n.size, 5)\n        logs =\
  \ n.listLogs()\n        self.assertEqual(logs, [1, 2, 3, 4])\n\n    def test_logFileGetLogAndReopenAndRotateAndReopenAndRotateAndReopenAndRotateWithDefaultMode(\n\
  \        self,\n    ):\n        n = logfile.LogFile(\"test.log\", self.directory,\
  \ defaultMode=0o600)\n        n.write(\"Hello\")\n        n.rotate()\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1])\n        log1 = n.getLog(1)\n        log1.close()\n\
  \        n.reopen()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n    \
  \    n.reopen()\n        n.write(\"Hello\")\n        self.assertEqual(n.size, 10)\n\
  \        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2, 3])\n \
  \       n.reopen()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2, 3, 4])\n\
  \n    def test_logFileGetLogAndReopenAndRotateAndReopenAndRotateAndReopenAndRotateWithMaxRotatedFiles(\n\
  \        self,\n    ):\n        n = logfile.LogFile(\n            \"test.log\",\
  \ self.directory, rotateLength=10, maxRotatedFiles=5\n        )\n        n.write(\"\
  Hello\")\n        n.rotate()\n        n.write(\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1])\n       \
  \ log1 = n.getLog(1)\n        log1.close()\n        n.reopen()\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1, 2])\n        n.reopen()\n        n.write(\"Hello\"\
  )\n        self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1, 2, 3])\n        n.reopen()\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 10)\n        n.rotate()\n        n.write(\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1, 2, 3, 4])\n\n    def test_logFileGetLogAndReopenAndRotateAndReopenAndRotateAndReopenAndRotateBinary(\n\
  \        self,\n    ):\n        n = logfile.LogFile(\"test.log\", self.directory,\
  \ rotateLength=10)\n        n.write(b\"Hello\")\n        n.rotate()\n        n.write(b\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1])\n        log1 = n.getLog(1)\n        log1.close()\n\
  \        n.reopen()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n        n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n    \
  \    n.reopen()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n\
  \        n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2, 3])\n \
  \       n.reopen()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n        n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2, 3, 4])\n\
  \n    def test_logFileGetLogAndReopenAndRotateAndReopenAndRotateAndReopenAndRotateBinaryWithDefaultMode(\n\
  \        self,\n    ):\n        n = logfile.LogFile(\"test.log\", self.directory,\
  \ defaultMode=0o600)\n        n.write(b\"Hello\")\n        n.rotate()\n        n.write(b\"\
  Hello\")\n        self.assertEqual(n.size, 5)\n        logs = n.listLogs()\n   \
  \     self.assertEqual(logs, [1])\n        log1 = n.getLog(1)\n        log1.close()\n\
  \        n.reopen()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 10)\n        n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs, [1, 2])\n    \
  \    n.reopen()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size, 10)\n\
  \        n.rotate()\n        n.write(b\"Hello\")\n        self.assertEqual(n.size,\
  \ 5)\n        logs = n.listLogs()\n        self.assertEqual(logs,"
